system fstcsExample 


class A {
	attributes
		m : INT
		b : [ B . a ]
		
	invariants
		this.m < 10
	methods
		increment { ((this.m + 1 < 10 
		                 & (forall obj : B
		                   	@ (((this = obj.a
		                   	    	=> this.m + 1 < obj.n) 
		                   	    & (this /= obj.a
		                   	      	=> obj.a.m < obj.n))))) 
		                & this.m + 1 : INT) 
		               --> ( this.m := this.m + 1 ) }
		
}
class B {
	attributes
		a : [ A . b ]
		n : INT
		cp : set ( C . bp  ) [ 0 .. * ]
		cq : set ( C . bq  ) [ 0 .. * ]
		
	invariants
		this.a.m < this.n
	methods
		increment { (this.a.m < this.n + 1 
		                & this.n + 1 : INT) 
		               --> ( this.n := this.n + 1 ) }
		addQ { (((((this /= c?.bq
		                   	=> c?.bq = this)
		                  	=> ((this = c?.bq
		                  	    	=> this : B) 
		                  	    & (this /= c?.bq
		                  	      	=> c?.bq : B))) 
		                  & ((this /= c?.bq 
		                      & (this /= c?.bq
		                        	=> c?.bq /= this))
		                    	=> this : B)) 
		                 & (((this /= c?.bq
		                     	=> c?.bq = this)
		                    	=> ((this = c?.bq
		                    	    	=> this.cq - {this} <<: C) 
		                    	    & (this /= c?.bq
		                    	      	=> c?.bq.cq - {c?.bq} <<: C))) 
		                    & ((this /= c?.bq 
		                        & (this /= c?.bq
		                          	=> c?.bq /= this))
		                      	=> (this.cq <<: C 
		                      	    & c? : C)))) 
		                & (((this /= c?.bq
		                    	=> c?.bq = this)
		                   	=> ((this = c?.bq
		                   	    	=> card(this.cq - {this}) >= 0) 
		                   	    & (this /= c?.bq
		                   	      	=> card(c?.bq.cq - {c?.bq}) >= 0))) 
		                   & ((this /= c?.bq 
		                       & (this /= c?.bq
		                         	=> c?.bq /= this))
		                     	=> card(this.cq) >= -1))) 
		               --> ( (c?.bq := this) 
		                       || ((c?.bq /= null 
		                            --> ( c?.bq.cq := c?.bq.cq - {c?.bq} )) 
		                             || (this.cq := this.cq \/ {c?})) ) }
		
}
class C {
	attributes
		o : INT
		bp : B . cp
		bq : [ B . cq ]
		
	invariants
		true
	methods
		
}

