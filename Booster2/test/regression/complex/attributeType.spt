/**
* Unit tests for the Booster2 language.
*/
module attributeType


language Booster2



test Attribute test [[
  system S
  
  set DaysOfWeek {Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday}

class mainClass{
	methods
		changeName{att22' = a?}
	attributes
		att1 (ID) : String
		att2 : INT
		att3 : DaysOfWeek
		att4 : secondaryClass
		att5 : secondaryClass . attA 
		att6 : secondaryClass . attB 
		att7 : secondaryClass . attC 

		att8 : [String]
		att9 : [INT]
		att10 : [DaysOfWeek]
		att11 : [secondaryClass]
		att12 : [secondaryClass . attD] 
		att13 : [secondaryClass . attE] 
		att14 : [secondaryClass . attF] 

		att15 : SET(String)[*]
		att16 : SET(INT)[*]
		att17 : SET(DaysOfWeek)[*]
		att18 : SET(secondaryClass)[*]
		att19 : SET(secondaryClass . attG)[*] 
		att20 : SET(secondaryClass . attH)[*]
		att21 : SET(secondaryClass . attI)[*] 

		att22 : DATETIME
		att23 : [DATETIME]
		att24 : SET(DATETIME)[*]

}

class secondaryClass{
	attributes
		name (ID) : STRING
		attA : mainClass . att5 
		attB : [mainClass . att6]
		attC : SET(mainClass . att7)[*]

		attD : mainClass . att12
		attE : [mainClass . att13]
		attF : SET(mainClass . att14)[*]

		attG : mainClass . att19
		attH : [mainClass . att20]
		attI : SET(mainClass . att21)[*]

}
]] run expand-booster-for-testing to
System(
  "S"
, [ SetDef(
      "DaysOfWeek"
    , ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
    )
  , Class(
      "mainClass"
    , [ Methods(
          [ Method(
              "changeName"
            , BinRel(PathStart("att22", Some(Primed())), Equal(), Input("a"))
            )
          ]
        )
      , Attributes(
          [ Attribute("att1", Identity(), BasicType(String()))
          , Attribute("att2", BasicType(Int()))
          , Attribute("att3", UniDirectional("DaysOfWeek"))
          , Attribute("att4", UniDirectional("secondaryClass"))
          , Attribute("att5", BiDirectional("secondaryClass", "attA"))
          , Attribute("att6", BiDirectional("secondaryClass", "attB"))
          , Attribute("att7", BiDirectional("secondaryClass", "attC"))
          , Attribute("att8", Optional(BasicType(String())))
          , Attribute("att9", Optional(BasicType(Int())))
          , Attribute("att10", Optional(UniDirectional("DaysOfWeek")))
          , Attribute("att11", Optional(UniDirectional("secondaryClass")))
          , Attribute("att12", Optional(BiDirectional("secondaryClass", "attD")))
          , Attribute("att13", Optional(BiDirectional("secondaryClass", "attE")))
          , Attribute("att14", Optional(BiDirectional("secondaryClass", "attF")))
          , Attribute("att15", Set(BasicType(String()), MultAny()))
          , Attribute("att16", Set(BasicType(Int()), MultAny()))
          , Attribute("att17", Set(UniDirectional("DaysOfWeek"), MultAny()))
          , Attribute("att18", Set(UniDirectional("secondaryClass"), MultAny()))
          , Attribute("att19", Set(BiDirectional("secondaryClass", "attG"), MultAny()))
          , Attribute("att20", Set(BiDirectional("secondaryClass", "attH"), MultAny()))
          , Attribute("att21", Set(BiDirectional("secondaryClass", "attI"), MultAny()))
          , Attribute("att22", BasicType(DateTime()))
          , Attribute("att23", Optional(BasicType(DateTime())))
          , Attribute("att24", Set(BasicType(DateTime()), MultAny()))
          ]
        )
      ]
    )
  , Class(
      "secondaryClass"
    , [ Attributes(
          [ Attribute("name", Identity(), BasicType(String()))
          , Attribute("attA", BiDirectional("mainClass", "att5"))
          , Attribute("attB", Optional(BiDirectional("mainClass", "att6")))
          , Attribute("attC", Set(BiDirectional("mainClass", "att7"), MultAny()))
          , Attribute("attD", BiDirectional("mainClass", "att12"))
          , Attribute("attE", Optional(BiDirectional("mainClass", "att13")))
          , Attribute("attF", Set(BiDirectional("mainClass", "att14"), MultAny()))
          , Attribute("attG", BiDirectional("mainClass", "att19"))
          , Attribute("attH", Optional(BiDirectional("mainClass", "att20")))
          , Attribute("attI", Set(BiDirectional("mainClass", "att21"), MultAny()))
          ]
        )
      ]
    )
  ]
) 

