module Triple

imports Common


context-free start-symbols

  Statement

context-free syntax

Statement.Prefixes = 
<@prefix rr: \<http://www.w3.org/ns/r2rml#\>.
@prefix rdf: \<http://www.w3.org/1999/02/22-rdf-syntax-ns#\>.
@prefix rdfs: \<http://www.w3.org/2000/01/rdf-schema#\>.
@prefix xsd: \<http://www.w3.org/2001/XMLSchema#\>.
@prefix map: \<#\>.
@prefix <ID>: \<booster2/<ID>#\>.

>
Statement.StatementList = <<{Statement "\n"}*>>

Statement.TableMapping = <map:<ID>
   
   rr:logicalTable map:<ID>;
   
   <Subject>

   <AttrMap>
   .
   
>


AttributeSubject.AttributeSubject = 
<rr:subjectMap [rr:template "booster2/<ID>/{`<ID>_<ID>`}";  
                rr:class <ID>:<ID>; 
	];>

Subject.Subject = 
<rr:subjectMap [rr:template "booster2/<ID>/{`<ID>`}";  
                rr:class <ID>:<ID>; 
	];>
										
AttrMap.AttrMapList = <<{AttrMap "\n\n"}*>>
										
										
AttrMap.AttrMap = 
<rr:predicateObjectMap [
        rr:predicate <DBColName>;
        rr:objectMap [ rr:column "`<ColumnName>`"; ];
    ];
>

AttrMap.Ref = 
<rr:predicateObjectMap [
        rr:predicate <DBColName>; 
           rr:objectMap [ rr:template "booster2/<ID>/{`<ColumnName>`}"; ]; 
    ];
>


Statement.RMLView = <map:<ID> rr:sqlQuery """
SELECT
`<ID>`,
<{ ColumnName ",\n"}*>
FROM <DBdotView>;
"""
.

>

////
//	   <{ ForeignSelect ",\n"}*>

ColumnName.ForeignSelect =  <(SELECT <ColumnName> FROM <DBdotView> WHERE `<ColumnName>`.`<ColumnName>`=`<ColumnName>`.`<ColumnName>`) AS `<ColumnName>`>


DBdotView.DBdotView = <`<ID>`.`<ID>_<ID>`> 

DBColName.DBColName = <<ID>:<ID>> 
ColumnName.ColumnName = <`<ID>`> 
context-free syntax   
