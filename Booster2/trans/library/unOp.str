module library/unOp

imports
  include/Booster2
    
 
 rules

/****
If we have the type of the expression in an operator, what is the type of the overall expression?
(bottom-to-top)
And if we have the type of the overall expression, what is the type of the component expression?
(top-to-bottom)
****/

// If it's the cardinality operator, then we always get an int
unop-btot-type:
	(Cardinality(), types1) -> [Int()]	


// By default, it's the same
unop-btot-type:
	(op, types1) -> types1	

unop-ttob-type:
	(op, types) -> types	

/****
Given a binary expression operator, how do we display it in the Booster notation.
This functionality has been separated to make some other transformations easier 
to define 
****/	

get-unop-booster-notation:
	Head() -> "head"

get-unop-booster-notation:
	Tail() -> "tail"

get-unop-booster-notation:
	Cardinality() -> "head"

get-unop-booster-notation:
	Negative() -> "-"
