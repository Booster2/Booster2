module translate/booster/lookupTable

imports
  include/Booster2

  library/abstractBoosterModel
  library/basicTypes
  translate/booster/expression
  translate/booster/constraint
  translate/booster/relation
  translate/booster/valueExpression
 

 rules
output-list(s) : ([], sep) -> $[]
output-list(s) : ([x], sep) -> $[[<s> x]]
output-list(s): ([x | xs], sep) -> 
$[[<s> x][sep][<output-list(s)> (xs, sep)]]

output-list = output-list(id)

output-lookup-table:
	system ->
$[
System
	[systemName]
	
SetDefs	
	[<output-list(output-setdef)> (setdefs, "\n")]

Classes	
	[<output-list(output-class)> (classes, "\n")]

Attributes	
	[<output-list(output-attribute)> (attributes, "\n")]

Methods	
	methods
	
]
	where
		systemName := <LookupTable> "Name";
		setdefs := <LookupTable> "SetDef";
		classes := <LookupTable> "Class";
		attributes := <LookupTable> "Attribute";
		methods := <LookupTable> "Method"
		

output-setdef:
	(name, elements)
		-> 
$[[name]: [<output-list> (elements, ",")]]		
	
output-class:
	(name, (extends, attributes, methods, constraints, workflows))-> 
$[name:       [name]
  extends:    [<output-list>(extends, ",")]
  attributes: [<output-list>(attributes, ",")]
  methods:    [<output-list>(methods, ",")]]
  
output-attribute:
	((cname, aname), decorations, type, opposite, minmuly, maxmult)
		->
$[class name: [cname]
  attribute name: [aname]]