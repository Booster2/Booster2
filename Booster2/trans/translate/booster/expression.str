module translate/booster/expression

imports
  include/Booster2
  
  library/abstractBoosterModel
  
  translate/booster/valueExpression
  
 
 rules
 	/*	output-to-booster-expression:
*/ 	

			
	output-to-booster-expression:
		Head(expr1)
			-> $[head([expr2])]
		where
			expr2 := <output-to-booster-expression> expr1

	output-to-booster-expression:
		Tail(expr1)
			-> $[tail([expr2])]
		where
			expr2 := <output-to-booster-expression> expr1

	output-to-booster-expression:
		Negative(expr1)
			-> $[-[expr2]]
		where
			expr2 := <output-to-booster-expression> expr1

	output-to-booster-expression:
		Cardinality(expr1)
			-> $[card([expr2])]
		where
			expr2 := <output-to-booster-expression> expr1


	output-to-booster-expression:
		Plus(expr1, expr2)
			-> $[[expr3] + [expr4]]
		where
			expr3 := <output-to-booster-expression> expr1;
			expr4 := <output-to-booster-expression> expr2

	output-to-booster-expression:
		Minus(expr1, expr2)
			-> $[[expr3] - [expr4]]
		where
			expr3 := <output-to-booster-expression> expr1;
			expr4 := <output-to-booster-expression> expr2

	output-to-booster-expression:
		Times(expr1, expr2)
			-> $[[expr3] * [expr4]]
		where
			expr3 := <output-to-booster-expression> expr1;
			expr4 := <output-to-booster-expression> expr2

	output-to-booster-expression:
		Divide(expr1, expr2)
			-> $[[expr3] / [expr4]]
		where
			expr3 := <output-to-booster-expression> expr1;
			expr4 := <output-to-booster-expression> expr2

	output-to-booster-expression:
		Maximum(expr1, expr2)
			-> $[[expr3] max [expr4]]
		where
			expr3 := <output-to-booster-expression> expr1;
			expr4 := <output-to-booster-expression> expr2

	output-to-booster-expression:
		Minimum(expr1, expr2)
			-> $[[expr3] min [expr4]]
		where
			expr3 := <output-to-booster-expression> expr1;
			expr4 := <output-to-booster-expression> expr2

	output-to-booster-expression:
		Union(expr1, expr2)
			-> $[[expr3] \/ [expr4]]
		where
			expr3 := <output-to-booster-expression> expr1;
			expr4 := <output-to-booster-expression> expr2

	output-to-booster-expression:
		Intersection(expr1, expr2)
			-> $[[expr3] /\ [expr4]]
		where
			expr3 := <output-to-booster-expression> expr1;
			expr4 := <output-to-booster-expression> expr2

	output-to-booster-expression:
		Concat(expr1, expr2)
			-> $[[expr3] ++ [expr4]]
		where
			expr3 := <output-to-booster-expression> expr1;
			expr4 := <output-to-booster-expression> expr2
