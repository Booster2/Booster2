module simplify/relation

imports
  include/Booster2

   
  	
rules

	simplify:
		BinRel(expr, NotEqual(), expr)
			-> False()

	simplify:
		BinRel(expr, Equal(), expr)
			-> True()
	
	simplify:
		BinRel(BinOp(a, Plus(), BasicValue(Integer(i))), LessThanEquals(), BasicValue(Integer(j)))
			-> BinRel(a, LessThanEquals(), BasicValue(Integer(k)))
		where
			k := <subt>(j,i)


	simplify:
		BinRel(BinOp(a, Plus(), BasicValue(Integer(i))), GreaterThanEquals(), BasicValue(Integer(j)))
			-> BinRel(a, GreaterThanEquals(), BasicValue(Integer(k)))
		where
			k := <subt>(j,i)


	simplify:
		BinRel(expression1, In(), BinOp(expression2, Union(), SetExtent([expression1])))
			-> True()
			

	simplify:
		BinRel(BinOp(expression1, Union(), expression2), SubsetEquals(), expression3)
			-> And(BinRel(expression1, SubsetEquals(), expression3), 
					BinRel(expression2, SubsetEquals(), expression3))

	

	simplify:
		BinRel(SetExtent([]), SubsetEquals(), expression2)
			-> True()		

	simplify:
		BinRel(SetExtent([exp, exps*]), SubsetEquals(), expression2)
			-> And(BinRel(exp, In(), expression2), BinRel(SetExtent([exps*]), SubsetEquals(), expression2))		
